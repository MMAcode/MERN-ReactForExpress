{"version":3,"sources":["Components/FirstPage.js","Components/SecondPage.js","Components/APIs/Dogs.js","Components/APIs/DogsFrame.js","Components/APIs/Cats.js","Components/APIs/CatsFrame.js","Components/APIs/APITemplate.js","globalState/globalVariables.js","Components/APIPage.js","functions/translate.js","Components/translate/TRpage.js","Components/APIs/WakeUpServerCleaned.js","App.js","serviceWorker.js","index.js"],"names":["FirstPage","SecondPage","id","type","disabled","DogsAPI","useState","error","setError","isLoaded","setIsLoaded","data","setdata","useEffect","fetch","then","res","json","result","message","DogsFrame","Dogs","CatsAPI","Note","styled","p","APITemplate","props","state","this","url","setState","console","log","key","title","style","backgroundColor","margin","Object","entries","map","arr","color","JSON","stringify","React","Component","urlRoot","SFrame","div","APIPage","translate","from","to","textToTranslate","postJsonData","a","options","method","headers","body","response","SHighlight","TRpage","inputChangeHandler","e","target","value","submitted","handleSubmit","preventDefault","translationObject","TextTranslated","translated","handleSubmit2","checkCzechHighlight","alertUserForSec","text","durationInSec","alertForSec","document","createElement","innerHTML","animationDuration","querySelector","append","Promise","resolve","setTimeout","remove","getSelectionText","window","getSelection","toString","selection","createRange","alert","onSubmit","placeholder","onChange","className","onTouchEnd","onTouch","onClick","onTouchEndCapture","onTouchCancel","onTouchCancelCapture","onTouchMove","onTouchMoveCapture","onTouchStart","onTouchStartCapture","WakeUpserverState","changeServerStateSubClassTo","subClassName","querySelectorAll","forEach","El","setAttribute","SLink","Link","App","basename","display","alignItems","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.602c69b4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction FirstPage() {\r\n  return (\r\n    <div>\r\n      <p> Miroslav greets the world from REACT - with hot reloading upon any change (even unsaved) XX.</p>\r\n      <h2>This is page 1 - HOME page.</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FirstPage;","import React from 'react';\r\n// import useScript from '../functions/getAudioFromMicrophone/miroStuff/useScript'\r\n\r\nfunction SecondPage() {\r\n  // useScript(`${__dirname}/../functions/getAudioFromMicrophone/js/WebAudioPeakMeter.js`);\r\n  // useScript(`${__dirname}/../functions/getAudioFromMicrophone/js/encoder-wav-worker.js`);\r\n  // useScript(`${__dirname}/../functions/getAudioFromMicrophone/js/RecorderService.js`);\r\n  // useScript(`${__dirname}/../functions/getAudioFromMicrophone/js/app.js`);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>This is page 2.</h2>\r\n      {/* <p>{`${__dirname}/functions/getAudioFromMicrophone/js/WebAudioPeakMeter.js`}</p> */}\r\n      {/* <p>{__dirname}</p> */}\r\n\r\n       <button id=\"btn-record\" type=\"button\">Record</button>\r\n      <button id=\"btn-stop\" type=\"button\" disabled>Stop</button>\r\n      <div >\r\n        <span id=\"debug-txt\"></span>\r\n      </div>\r\n\r\n      <div id=\"recording-meter\"></div>\r\n\r\n      <h3>Recordings</h3>\r\n      <div id=\"recordings-cont\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SecondPage;","import React, { useState, useEffect } from 'react';\r\n\r\nfunction DogsAPI() {\r\n\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [data, setdata] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://dog.ceo/api/breeds/image/random\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setdata(result.message);\r\n        },\r\n        (error) => {  // Note: it's important to handle errors here instead of a catch() block so that we don't swallow exceptions from actual bugs in components.\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [])   // Note: the empty deps array [] means this useEffect will run once similar to componentDidMount()\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n      <>\r\n        <div>{data}</div>\r\n        {/* <ul> */}\r\n\r\n        {/* {items.map(item => (\r\n            <li key={item.name}>\r\n              {item.name} {item.price}\r\n            </li> */}\r\n        {/* ))} */}\r\n        {/* </ul> */}\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default DogsAPI;\r\n","import React from 'react';\r\nimport DogsAPI from './Dogs';\r\n\r\nconst DogsFrame = () => {\r\n  return (\r\n    <div>\r\n      <h3>Dogs API (CORS: yes)</h3>\r\n      <DogsAPI/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DogsFrame;","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nfunction CatsAPI() {\r\n\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [data, setdata] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"use effect runing\");\r\n    fetch(\"https://cat-fact.herokuapp.com/facts\")\r\n\r\n    // fetch(\"https://dog.ceo/api/breeds/image/random\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          // console.log(\"we got response\");\r\n          // console.log(result);\r\n          setIsLoaded(true);\r\n          setdata(result);\r\n        },\r\n        (error) => {  // Note: it's important to handle errors here instead of a catch() block so that we don't swallow exceptions from actual bugs in components.\r\n          // console.log(\"we got error\");\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [])   // Note: the empty deps array [] means this useEffect will run once similar to componentDidMount()\r\n\r\n  // console.log(\"000\");\r\n  if (error) {\r\n    // console.log((\"1\"));\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    // console.log((\"2\"));\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    // console.log((\"3\"));\r\n    // console.log(data);\r\n\r\n    return (\r\n      <>\r\n        <div>{data}</div>\r\n        {/* <ul> */}\r\n\r\n        {/* {items.map(item => (\r\n            <li key={item.name}>\r\n              {item.name} {item.price}\r\n            </li> */}\r\n        {/* ))} */}\r\n        {/* </ul> */}\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CatsAPI;\r\n","import React from 'react';\r\nimport CatsAPI from './Cats';\r\nimport styled from 'styled-components';\r\n\r\nexport const Note = styled.p`\r\ncolor: blue;\r\nfont-style:italic;\r\nfont-size:0.8rem;\r\n\r\n`;\r\nconst CatsFrame = () => {\r\n  return (\r\n    <div>\r\n      <h3>Cats API (CORS: no)</h3>\r\n      <Note>note</Note>\r\n      <CatsAPI />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CatsFrame;","import React from 'react';\r\nimport { Note } from './CatsFrame';\r\n// import { Redirect } from 'react-router-dom';\r\n\r\nclass APITemplate extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // console.log(\"props url in constructor:\", props.url);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      data: [],\r\n      // url: props.url,\r\n      // title:props.title\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"component did mount\", this.state);\r\n    fetch(this.props.url)\r\n      .then(res => {\r\n        // console.log(\"first  in fetch: \", res);\r\n        // console.log(\"first  in fetch: \", res.body);\r\n        return res.json()\r\n      })\r\n      .then(\r\n        (result) => {\r\n          // console.log(\"Result second in fetch:\", result);\r\n\r\n          this.setState({\r\n            isLoaded: true,\r\n            data: result\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n          if (error) console.log(\"Error second in fetch:\", error);\r\n\r\n        }\r\n      )\r\n  }\r\n\r\n  render(props) {\r\n    const { data } = this.state;\r\n    // console.log(\"state in render:\", this.state);\r\n    // console.log(\"props in render:\", props); //no props - undefined!!\r\n    // console.log(\" url in state in render:\", url);\r\n    // console.log(\" error in state in render:\", error);\r\n    // console.log(\"type of received data in render: \", (typeof data == 'object'));\r\n\r\n\r\n    let key = 0;\r\n    return (\r\n      <div>\r\n        <h3>{this.props.title}</h3>\r\n        <Note> getting from url: \"{this.props.url}\"</Note>\r\n        {/* <div>Error: {error}</div> */}\r\n        {/* <div>Error:</div> */}\r\n        {/* {error ? Object.keys(error).map(obj => <div>{obj}:{data[obj].name}</div>) : <p>No error</p>} */}\r\n        {/* <br /> */}\r\n        {/* <div>Is loaded: {isLoaded}</div> */}\r\n        <div style={{ backgroundColor: 'red', margin: '10px' }}>\r\n          <h5> Data received-></h5>\r\n          {(typeof data == \"object\") ? Object.entries(data).map(arr => { key++; return <div key={key}> <span style={{ color: 'blue' }}> {arr[0]} </span> : {JSON.stringify(arr[1])}</div>; }) : <p>{data}</p>}\r\n          {/* {(typeof data == \"object\") ? <div>{JSON.stringify(data)}</div> : <p> {data} </p>}  */}\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default APITemplate;","// export const urlRoot = 'https://mern-express-heroku.herokuapp.com/api';\r\nexport const urlRoot = 'http://localhost:3001/api';","import React from 'react';\r\n// import CatsFrame from './APIs/CatsFrame';\r\nimport DogsFrame from './APIs/DogsFrame';\r\nimport APITemplate from './APIs/APITemplate';\r\nimport { urlRoot } from '../globalState/globalVariables';\r\nimport styled from 'styled-components'\r\n\r\n\r\nconsole.log(urlRoot);\r\n\r\n// const Block = styled(CatsAPI)`\r\n// background-color: green !important;\r\n// min-height:100px;\r\n// min-width:300px;\r\n// `;\r\nconst SFrame = styled.div`\r\n>*{\r\nbackground-color: lightgreen;\r\nmin-height:100px;\r\nmin-width:300px;\r\nmargin:10px;\r\n}\r\n`;\r\n\r\n\r\nfunction APIPage() {\r\n  // urlRoot = 'https://mern-express-heroku.herokuapp.com/api';\r\n  // urlRoot = 'http://localhost:3001/api';\r\n  return (\r\n    <>\r\n      <h2>This is API page.</h2>\r\n      <SFrame>\r\n        {/* <CatsFrame /> */}\r\n        <DogsFrame />\r\n        <APITemplate url={urlRoot+'/json'} title='test of simple local API from Express'/>\r\n        <APITemplate url={urlRoot+'/json/cats'} title='cats from Remote API using CORS'/>\r\n        {/* <APITemplate url='/api/send' /> */}\r\n        {/* <APITemplate url='/api/write' /> */}\r\n\r\n\r\n      </SFrame>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default APIPage;","let translate = async (from, to, textToTranslate) => {\r\n\r\n  async function postJsonData(url, data) {//object  \r\n    const options = {\r\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      headers: {\r\n        'Content-Type': 'application/json'  // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n    }\r\n    const response = await fetch(url, options);\r\n    return await response.json(); // parses JSON response into native JavaScript objects\r\n  }\r\n\r\n  return await\r\n    // postJsonData('http://localhost:3001/api/translate',\r\n    postJsonData('https://mern-express-heroku.herokuapp.com/api/translate',\r\n    {\r\n      from,\r\n      to,\r\n      translate: textToTranslate,\r\n    })\r\n    .then((data) => {\r\n      console.log(\"Data from server: \",data); // JSON data parsed by `response.json()` call\r\n      // console.log(data.translated); // JSON data parsed by `response.json()` call\r\n      return data;\r\n    });\r\n}\r\n\r\nexport default translate;","import React, { Component } from 'react'\r\nimport translate from '../../functions/translate'\r\nimport styled from 'styled-components';\r\nimport './alert.css';\r\n\r\nconst SHighlight = styled.p`\r\ndisplay: inline-block;\r\n/* display: flex; align-items: center;justify-content: center; margin:auto; */\r\nbackground-color: yellowgreen;\r\npadding: 10px 20px;\r\n`\r\n// const salert = styled.p`\r\n// `\r\n\r\n\r\nexport default class TRpage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      textToTranslate: '',\r\n      submitted: false,\r\n      TextTranslated: null\r\n    }\r\n  };\r\n\r\n  inputChangeHandler = async (e) => {\r\n    this.setState({ textToTranslate: e.target.value });\r\n    this.setState({ submitted: false });\r\n  }\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    this.setState({ submitted: true });\r\n    // console.log(this.state.textToTranslate);\r\n\r\n    let translationObject = await translate('en', 'cs', this.state.textToTranslate);\r\n    this.setState({ TextTranslated: translationObject.translated });\r\n\r\n    // const formX = document.querySelector('#translate-form-1');\r\n    // formX.reset();\r\n  }\r\n\r\n  handleSubmit2 = async e => {\r\n    e.preventDefault();\r\n    this.setState({ submitted: true });\r\n    let translationObject = await translate('cs', 'en', this.state.textToTranslate);\r\n    this.setState({ TextTranslated: translationObject.translated });\r\n  }\r\n\r\n\r\n  checkCzechHighlight = e => {\r\n    \r\n    // short alert\r\n    let alertUserForSec = async (text, durationInSec) => {\r\n      let alertForSec = document.createElement('p');\r\n      // alertForSec.textContent = text;\r\n      alertForSec.innerHTML = text;\r\n      alertForSec.id = \"alertForSec\";\r\n      // alertForSec.classList.add(\"flyingAlert\");\r\n      alertForSec.style.animationDuration = durationInSec + \"s\";\r\n      let hook = document.querySelector(\"#translateForms\");\r\n      hook.append(alertForSec);\r\n      await new Promise(resolve => setTimeout(resolve, durationInSec * 1000));\r\n      // console.log('XXXXXXXXXXX alert pop up');\r\n      document.querySelector(\"#alertForSec\").remove();\r\n    }\r\n\r\n\r\n\r\n    function getSelectionText(e) {\r\n      // e.preventDefault();\r\n      var text = \"\";\r\n      if (window.getSelection) {\r\n        console.log(\"text received\");\r\n        text = window.getSelection().toString();\r\n      } else if (document.selection && document.selection.type !== \"Control\") {\r\n        console.log(\"control received\");\r\n\r\n        text = document.selection.createRange().text;\r\n      } else {\r\n        console.log(\"screwed\");\r\n\r\n        alert('no');\r\n      }\r\n      return text;\r\n    }\r\n    console.log(getSelectionText(e));\r\n    alertUserForSec(getSelectionText(e), 1);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Translate page</h1>\r\n        <div id='translateForms'>\r\n\r\n          <form id='translate-form-1' onSubmit={this.handleSubmit}>\r\n            <h4>From ENGLISH to CZECH:</h4>\r\n            {/* method=\"post\" */}\r\n            {/* <input type='text' placeholder=\"English text...\" value={this.state.enText} onChange={this.inputChangeHandler} /> */}\r\n            <input type='text' placeholder=\"English text...\" onChange={this.inputChangeHandler} />\r\n            {/* <input type='text' value='Home' onChange={this.inputChangeHandler} /> */}\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n          <form id='translate-form-1' onSubmit={this.handleSubmit2}>\r\n            <h4>From CZECH to ENGLISH:</h4>\r\n            {/* method=\"post\" */}\r\n            <input type='text' placeholder=\"English text...\" onChange={this.inputChangeHandler} />\r\n            {/* <input type='text' value='Home' onChange={this.inputChangeHandler} /> */}\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n          {/* <span>{this.state.submitted ? 'Submitted' : 'Recorded'}: </span> */}\r\n          {/* <span>\"{this.state.enText}\"</span> */}\r\n          {typeof this.state.TextTranslated == 'string' && <SHighlight>{this.state.TextTranslated}</SHighlight>}\r\n        </div>\r\n        <div>\r\n          {/* <p className='textToHighlight' onClick={this.checkCzechHighlight} >Švýcarsko, mezi Čechy většinou známé precizností a vysokou úrovní infrastruktury, si při zvládání epidemie koronaviru nevede zrovna nejlépe. V zemi s více než 27 tisíci nakaženými a tisíci mrtvými dosud neplatí povinné nošení roušek, a to ani pro zaměstnance obchodů. Když jdete ven se zakrytým obličejem, lidé na vás koukají jako na malomocného, shodují se Češi žijící v zemi. */}\r\n          <p className='textToHighlight' onTouchEnd={this.checkCzechHighlight} >Švýcarsko, mezi Čechy většinou známé precizností a vysokou úrovní infrastruktury, si při zvládání epidemie koronaviru nevede zrovna nejlépe. V zemi s více než 27 tisíci nakaženými a tisíci mrtvými dosud neplatí povinné nošení roušek, a to ani pro zaměstnance obchodů. Když jdete ven se zakrytým obličejem, lidé na vás koukají jako na malomocného, shodují se Češi žijící v zemi.\r\n              Zdroj: https://www.idnes.cz/zpravy/zahranicni/koronavirus-covid-19-svycarsko-nakazeni-nemocni-opatreni.A200417_112621_zahranicni_vlc</p>\r\n          <p onTouch={this.checkCzechHighlight} >Touch Another is for staff to reuse \"(washable) surgical gowns or coveralls or similar suitable clothing (for example, long-sleeved laboratory coat, long-sleeved patient gown or industrial coverall) with a disposable plastic apron for AGPs (aerosol-generating procedures) and high-risk settings with forearm washing once gown or coverall is removed\".</p>\r\n          <button onClick={this.checkCzechHighlight}>Click me now</button>\r\n          <p onTouchEndCapture={this.checkCzechHighlight} >TouchEndCapture Another is for staff to reuse</p>\r\n          <p onTouchCancel={this.checkCzechHighlight} >TouchCancel Another is for staff to reuse</p>\r\n          <p onTouchCancelCapture={this.checkCzechHighlight} > TouchCancelCapture Another is for staff to reuse</p>\r\n          <p onTouchMove={this.checkCzechHighlight} >TouchMove Another is for staff to reuse</p>\r\n          <p onTouchMoveCapture={this.checkCzechHighlight} >TouchMoveCapture Another is for staff to reuse</p>\r\n          <p onTouchStart={this.checkCzechHighlight} >TouchStart Another is for staff to reuse</p>\r\n          <p onTouchStartCapture={this.checkCzechHighlight} >TouchStartCapture Another is for staff to reuse</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n","// creates CSS classes serverState which changes backgrounds, available everywhere\r\nimport React from 'react';\r\n\r\nlet nameOfServerStateCssClass = 'serverState';\r\n\r\nclass WakeUpserverState extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  changeServerStateSubClassTo = (subClassName) => {\r\n    console.log(\"subclass: \", subClassName, `${nameOfServerStateCssClass}${subClassName}`);\r\n    document.querySelectorAll(`.${nameOfServerStateCssClass}`).forEach(El => El.setAttribute('class', `${nameOfServerStateCssClass} ${nameOfServerStateCssClass}${subClassName}`));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.changeServerStateSubClassTo('Activating');\r\n\r\n    fetch(this.props.url)\r\n      .then(res => {\r\n        return res.json()\r\n      })\r\n      .then(\r\n        (result) => {\r\n          this.changeServerStateSubClassTo('On');\r\n        },\r\n        (error) => {\r\n          console.log(\"Error in fetch:\", error);\r\n          this.changeServerStateSubClassTo('Err');\r\n        }\r\n      )\r\n  }\r\n\r\n  render(props) {\r\n    let cssContent = `\r\n      .serverStateOn{background-color:green;}\r\n      .serverStateActivating{background-color:yellow;}\r\n      .serverStateOff{background-color:grey;}\r\n      .serverStateErr{background-color:red;}\r\n    `;\r\n    return (\r\n      <style>{cssContent}</style >\r\n    );\r\n  }\r\n}\r\n\r\nexport default WakeUpserverState;","//rsc  -> f.c.\r\nimport React from 'react';\r\nimport { Link, Route, Switch, HashRouter } from 'react-router-dom';\r\nimport './App.css';\r\nimport FirstPage from './Components/FirstPage'\r\nimport SecondPage from './Components/SecondPage'\r\nimport APIPage from './Components/APIPage'\r\n// import Test from './Components/Test'\r\nimport styled from 'styled-components'\r\nimport TRpage from './Components/translate/TRpage'\r\n\r\nimport  WakeUpserverState  from './Components/APIs/WakeUpServerCleaned';\r\nimport { urlRoot } from './globalState/globalVariables';\r\n\r\nconst SLink = styled(Link)`\r\nmargin:10px;\r\nbackground-color:orange !important;\r\n`\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    // div replaced to HAshRouter\r\n    <HashRouter basename='/' className=\"App\">  \r\n      {/* <header className=\"App-header\">\r\n      </header> */}\r\n      <div style={{ display: 'flex', alignItems:'center' }}>\r\n        <SLink to='/MERN-ReactForExpress/'>Home</SLink>\r\n        <SLink to='/MERN-ReactForExpress/pageAPI'>Page 3 - public API</SLink>\r\n        <SLink to='/MERN-ReactForExpress/pageTr'>Translate</SLink>\r\n        <SLink to='/MERN-ReactForExpress/page2'>Page 2.</SLink>\r\n        <SLink to='/'>/Home</SLink>\r\n        <WakeUpserverState url={urlRoot + '/start'}/>\r\n        <span className='serverState'> server State</span>\r\n      </div>\r\n\r\n      <Switch>\r\n        {/* <Route exact path='/MERN-ReactForExpress/' component={FirstPage} /> */}\r\n        <Route exact path='/MERN-ReactForExpress/' component={SecondPage} />\r\n        <Route exact path='/MERN-ReactForExpress/page2' component={SecondPage} />\r\n        <Route exact path='/MERN-ReactForExpress/pageAPI' component={APIPage} />\r\n        <Route exact path='/MERN-ReactForExpress/pageTr' component={TRpage} />\r\n        <Route component={FirstPage} /> {/* catch all other routes */}\r\n      </Switch>\r\n      \r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}